// <auto-generated />
using System;
using Bibliotek.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bibliotek.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Bibliotek.Models.BookModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Lent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LoanDateTimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LoanDateTimeStart")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Pages")
                        .HasColumnType("int");

                    b.Property<string>("Tittle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserModelID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserModelID");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Author = "David Willcock",
                            Genre = "Document",
                            Lent = false,
                            Pages = 437,
                            Tittle = "Secret of the universe"
                        },
                        new
                        {
                            ID = 2,
                            Author = "Mariam Jasmin",
                            Genre = "Poetry",
                            Lent = false,
                            Pages = 301,
                            Tittle = "Cool book"
                        },
                        new
                        {
                            ID = 3,
                            Author = "Arnold S.",
                            Genre = "Manual",
                            Lent = true,
                            LoanDateTimeEnd = new DateTime(2022, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LoanDateTimeStart = new DateTime(2022, 5, 10, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Pages = 301,
                            Tittle = "Training techniques"
                        });
                });

            modelBuilder.Entity("Bibliotek.Models.EBookModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Lent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LoanDateTimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LoanDateTimeStart")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Pages")
                        .HasColumnType("int");

                    b.Property<string>("Tittle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserModelID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserModelID");

                    b.ToTable("Ebooks");

                    b.HasData(
                        new
                        {
                            ID = 6,
                            Author = "Tom Hardy",
                            Genre = "Manual",
                            Lent = false,
                            Pages = 264,
                            Tittle = "C# for begginers"
                        });
                });

            modelBuilder.Entity("Bibliotek.Models.MovieModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Length")
                        .HasColumnType("int")
                        .HasColumnName("Length(min)");

                    b.Property<bool>("Lent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LoanDateTimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LoanDateTimeStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tittle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserModelID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserModelID");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            ID = 4,
                            Director = "Wachowsky brothers",
                            Genre = "Document",
                            Length = 94,
                            Lent = false,
                            Tittle = "Matrix"
                        },
                        new
                        {
                            ID = 5,
                            Director = "Wachowsky brothers",
                            Genre = "SF",
                            Length = 142,
                            Lent = true,
                            LoanDateTimeEnd = new DateTime(2022, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LoanDateTimeStart = new DateTime(2022, 5, 9, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Tittle = "Cloud Atlas"
                        });
                });

            modelBuilder.Entity("Bibliotek.Models.UserModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Bibliotek.Models.BookModel", b =>
                {
                    b.HasOne("Bibliotek.Models.UserModel", null)
                        .WithMany("LentBooks")
                        .HasForeignKey("UserModelID");
                });

            modelBuilder.Entity("Bibliotek.Models.EBookModel", b =>
                {
                    b.HasOne("Bibliotek.Models.UserModel", null)
                        .WithMany("LentEbooks")
                        .HasForeignKey("UserModelID");
                });

            modelBuilder.Entity("Bibliotek.Models.MovieModel", b =>
                {
                    b.HasOne("Bibliotek.Models.UserModel", null)
                        .WithMany("LentMovies")
                        .HasForeignKey("UserModelID");
                });

            modelBuilder.Entity("Bibliotek.Models.UserModel", b =>
                {
                    b.Navigation("LentBooks");

                    b.Navigation("LentEbooks");

                    b.Navigation("LentMovies");
                });
#pragma warning restore 612, 618
        }
    }
}
