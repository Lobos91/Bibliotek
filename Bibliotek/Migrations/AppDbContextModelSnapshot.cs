// <auto-generated />
using System;
using Bibliotek.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bibliotek.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Bibliotek.Models.KalenderModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Headline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kalendars");
                });

            modelBuilder.Entity("Bibliotek.Models.ProductModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Lent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LoanDateTimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LoanDateTimeStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReleaseId")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(2);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReleaseId");

                    b.HasIndex("UserId");

                    b.ToTable("Products");

                    b.HasDiscriminator<string>("Type").HasValue("ProductModel");
                });

            modelBuilder.Entity("Bibliotek.Models.ReleaseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Pages")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Releases");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "J. K. Rowling",
                            Genre = "Fantasy",
                            Pages = 503,
                            Title = "Harry Potter"
                        },
                        new
                        {
                            Id = 2,
                            Author = "J. K. Rowling",
                            Genre = "Fantasy",
                            Pages = 582,
                            Title = "Harry Potter 2.0"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Albin Svensson",
                            Genre = "Course",
                            Pages = 900,
                            Title = "C# for noobs"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Albin Svensson",
                            Genre = "Course",
                            Pages = 1402,
                            Title = "C# for noobs extended"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Wachowsky brothers",
                            Genre = "SF",
                            Title = "Matrix"
                        });
                });

            modelBuilder.Entity("Bibliotek.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Bibliotek.Models.BookModel", b =>
                {
                    b.HasBaseType("Bibliotek.Models.ProductModel");

                    b.Property<string>("BookFormat")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(4);

                    b.HasDiscriminator().HasValue("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Lent = false,
                            ReleaseId = 1,
                            Type = "Book",
                            BookFormat = "A2"
                        },
                        new
                        {
                            Id = 2,
                            Lent = false,
                            ReleaseId = 1,
                            Type = "Book",
                            BookFormat = "A2"
                        },
                        new
                        {
                            Id = 3,
                            Lent = false,
                            ReleaseId = 2,
                            Type = "Book",
                            BookFormat = "A2"
                        });
                });

            modelBuilder.Entity("Bibliotek.Models.EBookModel", b =>
                {
                    b.HasBaseType("Bibliotek.Models.ProductModel");

                    b.Property<double?>("DataSize")
                        .HasColumnType("float")
                        .HasColumnName("Size(Mb)")
                        .HasColumnOrder(5);

                    b.HasDiscriminator().HasValue("Ebook");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            Lent = false,
                            ReleaseId = 3,
                            Type = "Ebook",
                            DataSize = 0.59999999999999998
                        },
                        new
                        {
                            Id = 5,
                            Lent = false,
                            ReleaseId = 3,
                            Type = "Ebook",
                            DataSize = 2.2999999999999998
                        },
                        new
                        {
                            Id = 6,
                            Lent = false,
                            ReleaseId = 4,
                            Type = "Ebook",
                            DataSize = 1.2
                        });
                });

            modelBuilder.Entity("Bibliotek.Models.MovieModel", b =>
                {
                    b.HasBaseType("Bibliotek.Models.ProductModel");

                    b.Property<string>("Director")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(7);

                    b.Property<int?>("Length")
                        .HasColumnType("int")
                        .HasColumnName("Length(min)")
                        .HasColumnOrder(6);

                    b.HasDiscriminator().HasValue("Movie");

                    b.HasData(
                        new
                        {
                            Id = 7,
                            Lent = false,
                            ReleaseId = 5,
                            Type = "Movie",
                            Director = "Wachowsky brothers",
                            Length = 94
                        },
                        new
                        {
                            Id = 8,
                            Lent = false,
                            ReleaseId = 5,
                            Type = "Movie",
                            Director = "Wachowsky brothers",
                            Length = 94
                        },
                        new
                        {
                            Id = 9,
                            Lent = false,
                            ReleaseId = 5,
                            Type = "Movie",
                            Director = "Wachowsky brothers",
                            Length = 94
                        });
                });

            modelBuilder.Entity("Bibliotek.Models.ProductModel", b =>
                {
                    b.HasOne("Bibliotek.Models.ReleaseModel", "Release")
                        .WithMany("Products")
                        .HasForeignKey("ReleaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bibliotek.Models.UserModel", "User")
                        .WithMany("Products")
                        .HasForeignKey("UserId");

                    b.Navigation("Release");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bibliotek.Models.ReleaseModel", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Bibliotek.Models.UserModel", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
